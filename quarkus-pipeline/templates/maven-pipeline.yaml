apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: {{ .Values.component }}-service
spec:
  workspaces:
  - name: maven-repo
  - name: maven-settings

  params:
    - default: https://github.com/{{ .Values.domain }}/{{ .Values.system }}-{{ .Values.component }}-service
      name: git-url
      type: string
      description: "component source Git pepository"
    - default: main
      name: git-revision
      type: string
      description: "component source Git revision"
    {{- if eq .Values.deployment "jvm" }}
    - default: ./src/main/docker/Dockerfile.jvm
    {{- end }}
    {{- if eq .Values.deployment "native" }}
    - default: ./src/main/docker/Dockerfile.native
    {{- end }}
    {{- if eq .Values.deployment "legacy-jar" }}
    - default: ./src/main/docker/Dockerfile.legacy-jar
    {{- end }}
    {{- if eq .Values.deployment "native-micro" }}
    - default: ./src/main/docker/Dockerfile.native-micro
    {{- end }}
      name: dockerfilePath
      type: string
      description: "path to Dockerfile"
    - default: {{ .Values.image.registry }}/{{ .Values.system }}-dev/{{ .Values.component }}
      name: image
      type: string
      description: "container image"
    - default: latest
      name: version
      type: string
      description: "release version"

  tasks:
  - name: clone
    taskRef:
      name: git-clone
      kind: ClusterTask
    params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.git-revision)
    workspaces:
    - name: output
      workspace: maven-repo

  - name: build
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter: ["clone"]
    params:
    - name: GOALS
      value: ["compile"]
    workspaces:
    - name: source
      workspace: maven-repo
    - name: maven-settings
      workspace: maven-settings

  {{- if or (eq .Values.deployment "native") (eq .Values.deployment "native-micro") }}
  - name: package-and-build-container-image
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter: ["build"]
    params:
    - name: GOALS
      value: 
        - package
        - -DskipTests
        - -Dquarkus.jib.base-jvm-image=registry.access.redhat.com/ubi8/openjdk-21
        - -Dquarkus.container-image.insecure=true
        - -Dquarkus.native.container-build=true
        - -Dquarkus.container-image.build=true
        - -Dquarkus.container-image.image=$(params.image):$(params.version)
        - -Dquarkus.container-image.builder=jib
    workspaces:
    - name: source
      workspace: maven-repo
    - name: maven-settings
      workspace: maven-settings
  {{ end }}
  {{- if or (eq .Values.deployment "jvm") (eq .Values.deployment "legacy-jar") }}
  - name: package
    taskRef:
      name: maven
      kind: ClusterTask
    runAfter: ["build"]
    params:
    - name: GOALS
      value: 
        - package
        - -DskipTests
    workspaces:
    - name: source
      workspace: maven-repo
    - name: maven-settings
      workspace: maven-settings

  - name: build-container-image
    runAfter: ["package"]
    taskRef:
      name: buildah
      kind: ClusterTask
    workspaces:
    - name: source
      workspace: maven-repo
    params:
    - name: IMAGE
      value: $(params.image):$(params.version)
    - name: DOCKERFILE
      value: $(params.dockerfilePath)
  {{ end }}
